{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","useFechGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACZC,mBAAU,IADE,mBACzCC,EADyC,KAC7BC,EAD6B,KAmBhD,OACI,0BAAMC,SAZU,SAACC,GACjBA,EAAEC,iBACFC,QAAQC,IAAI,UAEPN,EAAWO,OAAOC,OAAS,IAC5BV,GAAc,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACvCR,EAAc,OAOd,2BACIS,KAAK,OACLC,MAAQX,EACRY,SArBc,SAACT,GACvBF,EAAeE,EAAEU,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAWH,GADxF,sBAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGlC,OAFAZ,QAAQC,IAAKqB,EAAOV,GAGhB,yBAAKc,UAAU,0CACX,yBACIC,IAAML,EACNM,IAAMhB,IACN,+BAAMU,EAAN,OCFFO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECLjB,SAAEA,GAAe,IAAD,EAEbhB,mBAAU,CAChCuB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAmBvC,OAZAC,qBAAU,WACRxB,EAASC,GACNwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAIEqB,EDX0BK,CAAa1B,GAAjCa,EAH2B,EAGhCN,KAAaa,EAHmB,EAGnBA,QAerB,OAZA9B,QAAQC,IAAK6B,GAaT,oCACI,wBAAIJ,UAAU,2CAAd,IAA2DhB,EAA3D,KAEEoB,GAAW,uBAAGJ,UAAU,yCAAb,cAEb,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACND,UElCpBkB,EAAe,WAAM,MAGM5C,mBAAU,CAAC,gBAHjB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAc9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OAEpB,kBAAC,EAAD,CACIA,SAAWA,EACX2B,IAAM3B,UCxBlC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1e6387b7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setInputValue] = useState ('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n        \r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Submit');\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [ inputValue, ...cats ]);      // Opcion 2\r\n            setInputValue('')\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSumit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=YUE15hH5yDtjaEXrZOU5oei74qDiJijG&q=${ encodeURI( category ) }&limit=10`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img =>  {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n   \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    console.log( title, url );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img \r\n                alt={ title }\r\n                src={ url } />\r\n                <p> { title } </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\n\r\n// import PropTypes from 'prop-types'\r\n\r\nexport const  GifGrid = ( { category } ) => {\r\n\r\n\r\n    const { data:images, loading } = useFechGifs( category );\r\n\r\n    // console.log( images );\r\n    console.log( loading );\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //   getGifs( category )\r\n    //     .then( setImages );\r\n    // }, [ category ])\r\n\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounceInDown\"> { category } </h3>  \r\n\r\n            { loading && <p className=\"animate__animated animate__zoomInDown\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n                { \r\n                    images.map( img => ( \r\n                        <GifGridItem\r\n                            key= { img.id }\r\n                            { ...img } /> \r\n                    ) )\r\n                }\r\n            \r\n            </div> \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFechGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    } )\r\n\r\n    useEffect(() => {\r\n      getGifs( category )\r\n        .then( imgs => {              \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [ category ])\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['one punch', 'Samuray x', 'Dragon Ball']\r\n    const [categories, setCategories] = useState( ['Dragon Ball'] )\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'otra cosa']);    // Opcion 1\r\n    //     setCategories(cats => [...cats, 'otra cosa']);      // Opcion 2\r\n\r\n    //     console.log('Aqui',  categories )\r\n    // }\r\n\r\n    // console.log( categories )\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            {/* <button onClick={ handleAdd } > Add </button> */}\r\n        \r\n            <ol>\r\n                { \r\n                    categories.map (category => \r\n                        // <li key={ category }> { category }</li>\r\n                        <GifGrid \r\n                            category={ category }\r\n                            key={ category }\r\n                         />\r\n\r\n                    )\r\n                }                \r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}